<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd
	">

	<context:component-scan base-package="com" />

	<!-- job context -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager2" />
	</bean>

	<bean id="transactionManager2"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	<!-- job context -->


	<!-- @scheduled açmak için herhangi bi sınıftaki metotları görsün die -->
	<task:annotation-driven />

	<!-- bu herhangi bi sınıftan annotation ile işaretli metotları tetiklemek 
		için -->
	<bean id="scheduledJobDemo" class="com.scheduler.ScheduledJobDemo" /> 
	<bean id="authenticationUtil" class="com.batch.AuthenticationUtil" />

	<bean id="report" class="com.batch.Report" scope="prototype" />

	<bean id="itemProcessor" class="com.batch.CustomItemProcessor" />
	<bean id="customWriter" class="com.batch.CustomWriter" />
	<bean id="customWriter2" class="com.batch.CustomWriter2" />

	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<!-- Read a csv file -->
		<property name="resource" value="/resources/csv/report.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,impressions" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<!-- <bean class="com.batch.ReportFieldSetMapper" /> -->
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="report" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="classpath:xml/report.xml" />
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>

	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.batch.Report</value>
			</list>
		</property>
	</bean>

	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="record" />
		<property name="resource" value="/resources/xml/report.xml" />
		<property name="unmarshaller" ref="reportUnmarshaller" />
	</bean>

	<!-- Read and map values to object, via jaxb2 -->
	<bean id="reportUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.batch.Report2</value>
			</list>
		</property>
	</bean>

	<batch:job id="xmlJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="xmlItemReader" writer="customWriter2"
					commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<batch:job id="helloWorldJob">
		<batch:step id="s1">
			<batch:tasklet>
				<batch:chunk reader="cvsFileItemReader" writer="customWriter"
					processor="itemProcessor" commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>



	<!-- <bean id="runScheduler" class="com.scheduler.RunScheduler" /> -->

	<!-- Run every 5 seconds -->
	<!-- <task:scheduled-tasks> <task:scheduled ref="runScheduler" method="run" 
		fixed-delay="5000" /> <task:scheduled ref="runScheduler" method="run" cron="0 
		40 13 * * ?" /> </task:scheduled-tasks> -->




</beans>