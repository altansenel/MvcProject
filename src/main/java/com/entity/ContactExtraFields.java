/*
 * Created on 7 Mar 2016 ( Time 11:04:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

import org.hibernate.envers.Audited;

/**
 * Persistent class for entity stored in table "contact_extra_fields"
 *
 * @author Telosys Tools Generator
 *
 */




@Audited
@Entity
// Define named queries here
@Table(name = "contact_extra_fields")
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class ContactExtraFields extends BaseEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
//	@EmbeddedId
//   private ContactExtraFieldsKey compositePrimaryKey ;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", nullable=false, length=30)
    private String     name         ;    @Column(name="insert_by", length=20)
    private String     insertBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="insert_at")
    private Date       insertAt     ;    @Column(name="update_by", length=20)
    private String     updateBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_at")
    private Date       updateAt     ;    @Column(name="is_active")
    private Boolean    isActive     ;    @Column(name="extra_fields_id")
    private Integer    extraFieldsId ;    @Column(name="workspace", nullable=false)
    private Integer    workspace    ;


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="contactExtraFields7", targetEntity=Contact.class)
    private List<Contact> listOfContact7;

    @OneToMany(mappedBy="contactExtraFields", targetEntity=Contact.class)
    private List<Contact> listOfContact;

    @OneToMany(mappedBy="contactExtraFields8", targetEntity=Contact.class)
    private List<Contact> listOfContact8;

    @OneToMany(mappedBy="contactExtraFields2", targetEntity=Contact.class)
    private List<Contact> listOfContact2;

    @OneToMany(mappedBy="contactExtraFields9", targetEntity=Contact.class)
    private List<Contact> listOfContact9;

    @OneToMany(mappedBy="contactExtraFields3", targetEntity=Contact.class)
    private List<Contact> listOfContact3;

    @OneToMany(mappedBy="contactExtraFields5", targetEntity=Contact.class)
    private List<Contact> listOfContact5;

    @OneToMany(mappedBy="contactExtraFields10", targetEntity=Contact.class)
    private List<Contact> listOfContact10;

    @OneToMany(mappedBy="contactExtraFields4", targetEntity=Contact.class)
    private List<Contact> listOfContact4;

    @OneToMany(mappedBy="contactExtraFields6", targetEntity=Contact.class)
    private List<Contact> listOfContact6;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------



    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }




    //--- DATABASE MAPPING : insert_by ( VARCHAR ) 
    public void setInsertBy( String insertBy ) {
        this.insertBy = insertBy;
    }
    public String getInsertBy() {
        return this.insertBy;
    }




    //--- DATABASE MAPPING : insert_at ( DATETIME ) 
    public void setInsertAt( Date insertAt ) {
        this.insertAt = insertAt;
    }
    public Date getInsertAt() {
        return this.insertAt;
    }




    //--- DATABASE MAPPING : update_by ( VARCHAR ) 
    public void setUpdateBy( String updateBy ) {
        this.updateBy = updateBy;
    }
    public String getUpdateBy() {
        return this.updateBy;
    }




    //--- DATABASE MAPPING : update_at ( DATETIME ) 
    public void setUpdateAt( Date updateAt ) {
        this.updateAt = updateAt;
    }
    public Date getUpdateAt() {
        return this.updateAt;
    }




    //--- DATABASE MAPPING : is_active ( BIT ) 
    public void setIsActive( Boolean isActive ) {
        this.isActive = isActive;
    }
    public Boolean getIsActive() {
        return this.isActive;
    }




    //--- DATABASE MAPPING : extra_fields_id ( INT ) 
    public void setExtraFieldsId( Integer extraFieldsId ) {
        this.extraFieldsId = extraFieldsId;
    }
    public Integer getExtraFieldsId() {
        return this.extraFieldsId;
    }




    //--- DATABASE MAPPING : workspace ( INT ) 
    public void setWorkspace( Integer workspace ) {
        this.workspace = workspace;
    }
    public Integer getWorkspace() {
        return this.workspace;
    }





    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfContact7( List<Contact> listOfContact7 ) {
        this.listOfContact7 = listOfContact7;
    }
    public List<Contact> getListOfContact7() {
        return this.listOfContact7;
    }

    public void setListOfContact( List<Contact> listOfContact ) {
        this.listOfContact = listOfContact;
    }
    public List<Contact> getListOfContact() {
        return this.listOfContact;
    }

    public void setListOfContact8( List<Contact> listOfContact8 ) {
        this.listOfContact8 = listOfContact8;
    }
    public List<Contact> getListOfContact8() {
        return this.listOfContact8;
    }

    public void setListOfContact2( List<Contact> listOfContact2 ) {
        this.listOfContact2 = listOfContact2;
    }
    public List<Contact> getListOfContact2() {
        return this.listOfContact2;
    }

    public void setListOfContact9( List<Contact> listOfContact9 ) {
        this.listOfContact9 = listOfContact9;
    }
    public List<Contact> getListOfContact9() {
        return this.listOfContact9;
    }

    public void setListOfContact3( List<Contact> listOfContact3 ) {
        this.listOfContact3 = listOfContact3;
    }
    public List<Contact> getListOfContact3() {
        return this.listOfContact3;
    }

    public void setListOfContact5( List<Contact> listOfContact5 ) {
        this.listOfContact5 = listOfContact5;
    }
    public List<Contact> getListOfContact5() {
        return this.listOfContact5;
    }

    public void setListOfContact10( List<Contact> listOfContact10 ) {
        this.listOfContact10 = listOfContact10;
    }
    public List<Contact> getListOfContact10() {
        return this.listOfContact10;
    }

    public void setListOfContact4( List<Contact> listOfContact4 ) {
        this.listOfContact4 = listOfContact4;
    }
    public List<Contact> getListOfContact4() {
        return this.listOfContact4;
    }

    public void setListOfContact6( List<Contact> listOfContact6 ) {
        this.listOfContact6 = listOfContact6;
    }
    public List<Contact> getListOfContact6() {
        return this.listOfContact6;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(insertBy);
        sb.append("|");
        sb.append(insertAt);
        sb.append("|");
        sb.append(updateBy);
        sb.append("|");
        sb.append(updateAt);
        sb.append("|");
        sb.append(isActive);
        sb.append("|");
        sb.append(extraFieldsId);
        sb.append("|");
        sb.append(workspace);
        sb.append("|");
        sb.append(version);
        return sb.toString(); 
    } 

}
