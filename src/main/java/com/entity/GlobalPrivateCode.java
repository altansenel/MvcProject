/*
 * Created on 7 Mar 2016 ( Time 11:04:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

import org.hibernate.envers.Audited;

/**
 * Persistent class for entity stored in table "global_private_code"
 *
 * @author Telosys Tools Generator
 *
 */




@Audited
@Entity
// Define named queries here
@Table(name = "global_private_code")
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class GlobalPrivateCode extends BaseEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
//	@EmbeddedId
//   private GlobalPrivateCodeKey compositePrimaryKey ;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="par1id")
    private Integer    par1id       ;    @Column(name="par2id")
    private Integer    par2id       ;    @Column(name="par3id")
    private Integer    par3id       ;    @Column(name="par4id")
    private Integer    par4id       ;    @Column(name="par5id")
    private Integer    par5id       ;    @Column(name="name", nullable=false, length=30)
    private String     name         ;    @Column(name="insert_by", length=20)
    private String     insertBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="insert_at")
    private Date       insertAt     ;    @Column(name="update_by", length=20)
    private String     updateBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_at")
    private Date       updateAt     ;    @Column(name="workspace", nullable=false)
    private Integer    workspace    ;


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="globalPrivateCode", targetEntity=InvoiceTransDetail.class)
    private List<InvoiceTransDetail> listOfInvoiceTransDetail;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=OrderTrans.class)
    private List<OrderTrans> listOfOrderTrans;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=BankTrans.class)
    private List<BankTrans> listOfBankTrans;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=WaybillTransDetail.class)
    private List<WaybillTransDetail> listOfWaybillTransDetail;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=SafeTrans.class)
    private List<SafeTrans> listOfSafeTrans;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=StockTrans.class)
    private List<StockTrans> listOfStockTrans;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=ChqbllPayrollDetail.class)
    private List<ChqbllPayrollDetail> listOfChqbllPayrollDetail;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=WaybillTrans.class)
    private List<WaybillTrans> listOfWaybillTrans;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=OrderTransDetail.class)
    private List<OrderTransDetail> listOfOrderTransDetail;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=StockTransDetail.class)
    private List<StockTransDetail> listOfStockTransDetail;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=InvoiceTrans.class)
    private List<InvoiceTrans> listOfInvoiceTrans;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=ChqbllPayroll.class)
    private List<ChqbllPayroll> listOfChqbllPayroll;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=ContactTrans.class)
    private List<ContactTrans> listOfContactTrans;

    @OneToMany(mappedBy="globalPrivateCode", targetEntity=ChqbllTrans.class)
    private List<ChqbllTrans> listOfChqbllTrans;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------



    //--- DATABASE MAPPING : par1id ( INT ) 
    public void setPar1id( Integer par1id ) {
        this.par1id = par1id;
    }
    public Integer getPar1id() {
        return this.par1id;
    }




    //--- DATABASE MAPPING : par2id ( INT ) 
    public void setPar2id( Integer par2id ) {
        this.par2id = par2id;
    }
    public Integer getPar2id() {
        return this.par2id;
    }




    //--- DATABASE MAPPING : par3id ( INT ) 
    public void setPar3id( Integer par3id ) {
        this.par3id = par3id;
    }
    public Integer getPar3id() {
        return this.par3id;
    }




    //--- DATABASE MAPPING : par4id ( INT ) 
    public void setPar4id( Integer par4id ) {
        this.par4id = par4id;
    }
    public Integer getPar4id() {
        return this.par4id;
    }




    //--- DATABASE MAPPING : par5id ( INT ) 
    public void setPar5id( Integer par5id ) {
        this.par5id = par5id;
    }
    public Integer getPar5id() {
        return this.par5id;
    }




    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }




    //--- DATABASE MAPPING : insert_by ( VARCHAR ) 
    public void setInsertBy( String insertBy ) {
        this.insertBy = insertBy;
    }
    public String getInsertBy() {
        return this.insertBy;
    }




    //--- DATABASE MAPPING : insert_at ( DATETIME ) 
    public void setInsertAt( Date insertAt ) {
        this.insertAt = insertAt;
    }
    public Date getInsertAt() {
        return this.insertAt;
    }




    //--- DATABASE MAPPING : update_by ( VARCHAR ) 
    public void setUpdateBy( String updateBy ) {
        this.updateBy = updateBy;
    }
    public String getUpdateBy() {
        return this.updateBy;
    }




    //--- DATABASE MAPPING : update_at ( DATETIME ) 
    public void setUpdateAt( Date updateAt ) {
        this.updateAt = updateAt;
    }
    public Date getUpdateAt() {
        return this.updateAt;
    }




    //--- DATABASE MAPPING : workspace ( INT ) 
    public void setWorkspace( Integer workspace ) {
        this.workspace = workspace;
    }
    public Integer getWorkspace() {
        return this.workspace;
    }





    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfInvoiceTransDetail( List<InvoiceTransDetail> listOfInvoiceTransDetail ) {
        this.listOfInvoiceTransDetail = listOfInvoiceTransDetail;
    }
    public List<InvoiceTransDetail> getListOfInvoiceTransDetail() {
        return this.listOfInvoiceTransDetail;
    }

    public void setListOfOrderTrans( List<OrderTrans> listOfOrderTrans ) {
        this.listOfOrderTrans = listOfOrderTrans;
    }
    public List<OrderTrans> getListOfOrderTrans() {
        return this.listOfOrderTrans;
    }

    public void setListOfBankTrans( List<BankTrans> listOfBankTrans ) {
        this.listOfBankTrans = listOfBankTrans;
    }
    public List<BankTrans> getListOfBankTrans() {
        return this.listOfBankTrans;
    }

    public void setListOfWaybillTransDetail( List<WaybillTransDetail> listOfWaybillTransDetail ) {
        this.listOfWaybillTransDetail = listOfWaybillTransDetail;
    }
    public List<WaybillTransDetail> getListOfWaybillTransDetail() {
        return this.listOfWaybillTransDetail;
    }

    public void setListOfSafeTrans( List<SafeTrans> listOfSafeTrans ) {
        this.listOfSafeTrans = listOfSafeTrans;
    }
    public List<SafeTrans> getListOfSafeTrans() {
        return this.listOfSafeTrans;
    }

    public void setListOfStockTrans( List<StockTrans> listOfStockTrans ) {
        this.listOfStockTrans = listOfStockTrans;
    }
    public List<StockTrans> getListOfStockTrans() {
        return this.listOfStockTrans;
    }

    public void setListOfChqbllPayrollDetail( List<ChqbllPayrollDetail> listOfChqbllPayrollDetail ) {
        this.listOfChqbllPayrollDetail = listOfChqbllPayrollDetail;
    }
    public List<ChqbllPayrollDetail> getListOfChqbllPayrollDetail() {
        return this.listOfChqbllPayrollDetail;
    }

    public void setListOfWaybillTrans( List<WaybillTrans> listOfWaybillTrans ) {
        this.listOfWaybillTrans = listOfWaybillTrans;
    }
    public List<WaybillTrans> getListOfWaybillTrans() {
        return this.listOfWaybillTrans;
    }

    public void setListOfOrderTransDetail( List<OrderTransDetail> listOfOrderTransDetail ) {
        this.listOfOrderTransDetail = listOfOrderTransDetail;
    }
    public List<OrderTransDetail> getListOfOrderTransDetail() {
        return this.listOfOrderTransDetail;
    }

    public void setListOfStockTransDetail( List<StockTransDetail> listOfStockTransDetail ) {
        this.listOfStockTransDetail = listOfStockTransDetail;
    }
    public List<StockTransDetail> getListOfStockTransDetail() {
        return this.listOfStockTransDetail;
    }

    public void setListOfInvoiceTrans( List<InvoiceTrans> listOfInvoiceTrans ) {
        this.listOfInvoiceTrans = listOfInvoiceTrans;
    }
    public List<InvoiceTrans> getListOfInvoiceTrans() {
        return this.listOfInvoiceTrans;
    }

    public void setListOfChqbllPayroll( List<ChqbllPayroll> listOfChqbllPayroll ) {
        this.listOfChqbllPayroll = listOfChqbllPayroll;
    }
    public List<ChqbllPayroll> getListOfChqbllPayroll() {
        return this.listOfChqbllPayroll;
    }

    public void setListOfContactTrans( List<ContactTrans> listOfContactTrans ) {
        this.listOfContactTrans = listOfContactTrans;
    }
    public List<ContactTrans> getListOfContactTrans() {
        return this.listOfContactTrans;
    }

    public void setListOfChqbllTrans( List<ChqbllTrans> listOfChqbllTrans ) {
        this.listOfChqbllTrans = listOfChqbllTrans;
    }
    public List<ChqbllTrans> getListOfChqbllTrans() {
        return this.listOfChqbllTrans;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(par1id);
        sb.append("|");
        sb.append(par2id);
        sb.append("|");
        sb.append(par3id);
        sb.append("|");
        sb.append(par4id);
        sb.append("|");
        sb.append(par5id);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(insertBy);
        sb.append("|");
        sb.append(insertAt);
        sb.append("|");
        sb.append(updateBy);
        sb.append("|");
        sb.append(updateAt);
        sb.append("|");
        sb.append(workspace);
        sb.append("|");
        sb.append(version);
        return sb.toString(); 
    } 

}
