/*
 * Created on 7 Mar 2016 ( Time 11:04:57 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

import org.hibernate.envers.Audited;

/**
 * Persistent class for entity stored in table "admin_document_target"
 *
 * @author Telosys Tools Generator
 *
 */




@Audited
@Entity
// Define named queries here
@Table(name = "admin_document_target")
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class AdminDocumentTarget extends BaseEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
//	@EmbeddedId
//   private AdminDocumentTargetKey compositePrimaryKey ;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", nullable=false, length=30)
    private String     name         ;    @Column(name="is_local")
    private Boolean    isLocal      ;    @Column(name="target_type", length=10)
    private String     targetType   ;    @Column(name="view_type", length=9)
    private String     viewType     ;    @Column(name="path", length=150)
    private String     path         ;    @Column(name="is_compressed")
    private Boolean    isCompressed ;    @Column(name="description", length=30)
    private String     description  ;    @Column(name="is_active")
    private Boolean    isActive     ;


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------



    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }




    //--- DATABASE MAPPING : is_local ( BIT ) 
    public void setIsLocal( Boolean isLocal ) {
        this.isLocal = isLocal;
    }
    public Boolean getIsLocal() {
        return this.isLocal;
    }




    //--- DATABASE MAPPING : target_type ( VARCHAR ) 
    public void setTargetType( String targetType ) {
        this.targetType = targetType;
    }
    public String getTargetType() {
        return this.targetType;
    }




    //--- DATABASE MAPPING : view_type ( VARCHAR ) 
    public void setViewType( String viewType ) {
        this.viewType = viewType;
    }
    public String getViewType() {
        return this.viewType;
    }




    //--- DATABASE MAPPING : path ( VARCHAR ) 
    public void setPath( String path ) {
        this.path = path;
    }
    public String getPath() {
        return this.path;
    }




    //--- DATABASE MAPPING : is_compressed ( BIT ) 
    public void setIsCompressed( Boolean isCompressed ) {
        this.isCompressed = isCompressed;
    }
    public Boolean getIsCompressed() {
        return this.isCompressed;
    }




    //--- DATABASE MAPPING : description ( VARCHAR ) 
    public void setDescription( String description ) {
        this.description = description;
    }
    public String getDescription() {
        return this.description;
    }




    //--- DATABASE MAPPING : is_active ( BIT ) 
    public void setIsActive( Boolean isActive ) {
        this.isActive = isActive;
    }
    public Boolean getIsActive() {
        return this.isActive;
    }





    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(isLocal);
        sb.append("|");
        sb.append(targetType);
        sb.append("|");
        sb.append(viewType);
        sb.append("|");
        sb.append(path);
        sb.append("|");
        sb.append(isCompressed);
        sb.append("|");
        sb.append(description);
        sb.append("|");
        sb.append(isActive);
        sb.append("|");
        sb.append(version);
        return sb.toString(); 
    } 

}
