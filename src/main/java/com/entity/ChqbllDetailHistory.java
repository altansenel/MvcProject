/*
 * Created on 7 Mar 2016 ( Time 11:04:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

import org.hibernate.envers.Audited;

/**
 * Persistent class for entity stored in table "chqbll_detail_history"
 *
 * @author Telosys Tools Generator
 *
 */




@Audited
@Entity
// Define named queries here
@Table(name = "chqbll_detail_history")
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class ChqbllDetailHistory extends BaseEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
//	@EmbeddedId
//   private ChqbllDetailHistoryKey compositePrimaryKey ;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="sort", nullable=false, length=6)
    private String     sort         ;    @Temporal(TemporalType.DATE)
    @Column(name="step_date", nullable=false)
    private Date       stepDate     ;    @Column(name="step", nullable=false, length=15)
    private String     step         ;    @Column(name="insert_by", length=20)
    private String     insertBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="insert_at")
    private Date       insertAt     ;
	// "detailId" (column "detail_id") is not defined by itself because used as FK in a link 
	// "contactId" (column "contact_id") is not defined by itself because used as FK in a link 
	// "bankId" (column "bank_id") is not defined by itself because used as FK in a link 
	// "safeId" (column "safe_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="contact_id", referencedColumnName="id")
    private Contact contact     ;

    @ManyToOne
    @JoinColumn(name="safe_id", referencedColumnName="id")
    private Safe safe        ;

    @ManyToOne
    @JoinColumn(name="bank_id", referencedColumnName="id")
    private Bank bank        ;

    @ManyToOne
    @JoinColumn(name="detail_id", referencedColumnName="id")
    private ChqbllPayrollDetail chqbllPayrollDetail;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------



    //--- DATABASE MAPPING : sort ( VARCHAR ) 
    public void setSort( String sort ) {
        this.sort = sort;
    }
    public String getSort() {
        return this.sort;
    }




    //--- DATABASE MAPPING : step_date ( DATE ) 
    public void setStepDate( Date stepDate ) {
        this.stepDate = stepDate;
    }
    public Date getStepDate() {
        return this.stepDate;
    }




    //--- DATABASE MAPPING : step ( VARCHAR ) 
    public void setStep( String step ) {
        this.step = step;
    }
    public String getStep() {
        return this.step;
    }




    //--- DATABASE MAPPING : insert_by ( VARCHAR ) 
    public void setInsertBy( String insertBy ) {
        this.insertBy = insertBy;
    }
    public String getInsertBy() {
        return this.insertBy;
    }




    //--- DATABASE MAPPING : insert_at ( DATETIME ) 
    public void setInsertAt( Date insertAt ) {
        this.insertAt = insertAt;
    }
    public Date getInsertAt() {
        return this.insertAt;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setContact( Contact contact ) {
        this.contact = contact;
    }
    public Contact getContact() {
        return this.contact;
    }

    public void setSafe( Safe safe ) {
        this.safe = safe;
    }
    public Safe getSafe() {
        return this.safe;
    }

    public void setBank( Bank bank ) {
        this.bank = bank;
    }
    public Bank getBank() {
        return this.bank;
    }

    public void setChqbllPayrollDetail( ChqbllPayrollDetail chqbllPayrollDetail ) {
        this.chqbllPayrollDetail = chqbllPayrollDetail;
    }
    public ChqbllPayrollDetail getChqbllPayrollDetail() {
        return this.chqbllPayrollDetail;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(sort);
        sb.append("|");
        sb.append(stepDate);
        sb.append("|");
        sb.append(step);
        sb.append("|");
        sb.append(insertBy);
        sb.append("|");
        sb.append(insertAt);
        return sb.toString(); 
    } 

}
