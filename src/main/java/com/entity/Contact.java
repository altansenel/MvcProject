/*
 * Created on 7 Mar 2016 ( Time 11:04:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

import org.hibernate.envers.Audited;

/**
 * Persistent class for entity stored in table "contact"
 *
 * @author Telosys Tools Generator
 *
 */




@Audited
@Entity
// Define named queries here
@Table(name = "contact")
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class Contact extends BaseEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
//	@EmbeddedId
//   private ContactKey compositePrimaryKey ;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="code", nullable=false, length=30)
    private String     code         ;    @Column(name="name", nullable=false, length=100)
    private String     name         ;    @Column(name="tax_office", length=20)
    private String     taxOffice    ;    @Column(name="tax_number", length=15)
    private String     taxNumber    ;    @Column(name="tc_kimlik", length=11)
    private String     tcKimlik     ;    @Column(name="relevant", length=30)
    private String     relevant     ;    @Column(name="phone", length=15)
    private String     phone        ;    @Column(name="fax", length=15)
    private String     fax          ;    @Column(name="mobile_phone", length=15)
    private String     mobilePhone  ;    @Column(name="address1", length=100)
    private String     address1     ;    @Column(name="address2", length=100)
    private String     address2     ;    @Column(name="city", length=20)
    private String     city         ;    @Column(name="country", length=20)
    private String     country      ;    @Column(name="email", length=100)
    private String     email        ;    @Column(name="website", length=100)
    private String     website      ;    @Column(name="status", length=12)
    private String     status       ;    @Column(name="exc_code", length=3)
    private String     excCode      ;    @Column(name="note")
    private String     note         ;    @Column(name="is_active")
    private Boolean    isActive     ;    @Column(name="insert_by", length=20)
    private String     insertBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="insert_at")
    private Date       insertAt     ;    @Column(name="update_by", length=20)
    private String     updateBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_at")
    private Date       updateAt     ;    @Column(name="workspace", nullable=false)
    private Integer    workspace    ;
	// "sellerId" (column "seller_id") is not defined by itself because used as FK in a link 
	// "categoryId" (column "category_id") is not defined by itself because used as FK in a link 
	// "priceListId" (column "price_list_id") is not defined by itself because used as FK in a link 
	// "extraField0Id" (column "extra_field0_id") is not defined by itself because used as FK in a link 
	// "extraField1Id" (column "extra_field1_id") is not defined by itself because used as FK in a link 
	// "extraField2Id" (column "extra_field2_id") is not defined by itself because used as FK in a link 
	// "extraField3Id" (column "extra_field3_id") is not defined by itself because used as FK in a link 
	// "extraField4Id" (column "extra_field4_id") is not defined by itself because used as FK in a link 
	// "extraField5Id" (column "extra_field5_id") is not defined by itself because used as FK in a link 
	// "extraField6Id" (column "extra_field6_id") is not defined by itself because used as FK in a link 
	// "extraField7Id" (column "extra_field7_id") is not defined by itself because used as FK in a link 
	// "extraField8Id" (column "extra_field8_id") is not defined by itself because used as FK in a link 
	// "extraField9Id" (column "extra_field9_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="category_id", referencedColumnName="id")
    private ContactCategory contactCategory;

    @ManyToOne
    @JoinColumn(name="extra_field8_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields3;

    @OneToMany(mappedBy="contact", targetEntity=OrderTrans.class)
    private List<OrderTrans> listOfOrderTrans;

    @OneToMany(mappedBy="contact", targetEntity=ChqbllPayrollDetail.class)
    private List<ChqbllPayrollDetail> listOfChqbllPayrollDetail;

    @OneToMany(mappedBy="contact", targetEntity=StockTransDetail.class)
    private List<StockTransDetail> listOfStockTransDetail;

    @ManyToOne
    @JoinColumn(name="seller_id", referencedColumnName="id")
    private SaleSeller saleSeller  ;

    @OneToMany(mappedBy="contact", targetEntity=ChqbllTrans.class)
    private List<ChqbllTrans> listOfChqbllTrans;

    @ManyToOne
    @JoinColumn(name="extra_field1_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields6;

    @OneToMany(mappedBy="contact", targetEntity=InvoiceTrans.class)
    private List<InvoiceTrans> listOfInvoiceTrans;

    @OneToMany(mappedBy="contact", targetEntity=InvoiceTransDetail.class)
    private List<InvoiceTransDetail> listOfInvoiceTransDetail;

    @ManyToOne
    @JoinColumn(name="extra_field3_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields8;

    @ManyToOne
    @JoinColumn(name="extra_field5_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields10;

    @OneToMany(mappedBy="contact", targetEntity=WaybillTransDetail.class)
    private List<WaybillTransDetail> listOfWaybillTransDetail;

    @OneToMany(mappedBy="contact", targetEntity=StockTrans.class)
    private List<StockTrans> listOfStockTrans;

    @OneToMany(mappedBy="contact", targetEntity=OrderTransDetail.class)
    private List<OrderTransDetail> listOfOrderTransDetail;

    @ManyToOne
    @JoinColumn(name="extra_field7_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields2;

    @ManyToOne
    @JoinColumn(name="price_list_id", referencedColumnName="id")
    private StockPriceList stockPriceList;

    @ManyToOne
    @JoinColumn(name="extra_field9_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields4;

    @ManyToOne
    @JoinColumn(name="extra_field0_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields5;

    @ManyToOne
    @JoinColumn(name="extra_field2_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields7;

    @OneToMany(mappedBy="contact", targetEntity=ContactTrans.class)
    private List<ContactTrans> listOfContactTrans;

    @OneToMany(mappedBy="contact", targetEntity=WaybillTrans.class)
    private List<WaybillTrans> listOfWaybillTrans;

    @ManyToOne
    @JoinColumn(name="extra_field4_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields9;

    @OneToMany(mappedBy="contact", targetEntity=ChqbllPayroll.class)
    private List<ChqbllPayroll> listOfChqbllPayroll;

    @ManyToOne
    @JoinColumn(name="extra_field6_id", referencedColumnName="id")
    private ContactExtraFields contactExtraFields;

    @OneToMany(mappedBy="contact", targetEntity=ChqbllDetailHistory.class)
    private List<ChqbllDetailHistory> listOfChqbllDetailHistory;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------



    //--- DATABASE MAPPING : code ( VARCHAR ) 
    public void setCode( String code ) {
        this.code = code;
    }
    public String getCode() {
        return this.code;
    }




    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }




    //--- DATABASE MAPPING : tax_office ( VARCHAR ) 
    public void setTaxOffice( String taxOffice ) {
        this.taxOffice = taxOffice;
    }
    public String getTaxOffice() {
        return this.taxOffice;
    }




    //--- DATABASE MAPPING : tax_number ( VARCHAR ) 
    public void setTaxNumber( String taxNumber ) {
        this.taxNumber = taxNumber;
    }
    public String getTaxNumber() {
        return this.taxNumber;
    }




    //--- DATABASE MAPPING : tc_kimlik ( VARCHAR ) 
    public void setTcKimlik( String tcKimlik ) {
        this.tcKimlik = tcKimlik;
    }
    public String getTcKimlik() {
        return this.tcKimlik;
    }




    //--- DATABASE MAPPING : relevant ( VARCHAR ) 
    public void setRelevant( String relevant ) {
        this.relevant = relevant;
    }
    public String getRelevant() {
        return this.relevant;
    }




    //--- DATABASE MAPPING : phone ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }




    //--- DATABASE MAPPING : fax ( VARCHAR ) 
    public void setFax( String fax ) {
        this.fax = fax;
    }
    public String getFax() {
        return this.fax;
    }




    //--- DATABASE MAPPING : mobile_phone ( VARCHAR ) 
    public void setMobilePhone( String mobilePhone ) {
        this.mobilePhone = mobilePhone;
    }
    public String getMobilePhone() {
        return this.mobilePhone;
    }




    //--- DATABASE MAPPING : address1 ( VARCHAR ) 
    public void setAddress1( String address1 ) {
        this.address1 = address1;
    }
    public String getAddress1() {
        return this.address1;
    }




    //--- DATABASE MAPPING : address2 ( VARCHAR ) 
    public void setAddress2( String address2 ) {
        this.address2 = address2;
    }
    public String getAddress2() {
        return this.address2;
    }




    //--- DATABASE MAPPING : city ( VARCHAR ) 
    public void setCity( String city ) {
        this.city = city;
    }
    public String getCity() {
        return this.city;
    }




    //--- DATABASE MAPPING : country ( VARCHAR ) 
    public void setCountry( String country ) {
        this.country = country;
    }
    public String getCountry() {
        return this.country;
    }




    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }




    //--- DATABASE MAPPING : website ( VARCHAR ) 
    public void setWebsite( String website ) {
        this.website = website;
    }
    public String getWebsite() {
        return this.website;
    }




    //--- DATABASE MAPPING : status ( VARCHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }




    //--- DATABASE MAPPING : exc_code ( VARCHAR ) 
    public void setExcCode( String excCode ) {
        this.excCode = excCode;
    }
    public String getExcCode() {
        return this.excCode;
    }




    //--- DATABASE MAPPING : note ( TEXT ) 
    public void setNote( String note ) {
        this.note = note;
    }
    public String getNote() {
        return this.note;
    }




    //--- DATABASE MAPPING : is_active ( BIT ) 
    public void setIsActive( Boolean isActive ) {
        this.isActive = isActive;
    }
    public Boolean getIsActive() {
        return this.isActive;
    }




    //--- DATABASE MAPPING : insert_by ( VARCHAR ) 
    public void setInsertBy( String insertBy ) {
        this.insertBy = insertBy;
    }
    public String getInsertBy() {
        return this.insertBy;
    }




    //--- DATABASE MAPPING : insert_at ( DATETIME ) 
    public void setInsertAt( Date insertAt ) {
        this.insertAt = insertAt;
    }
    public Date getInsertAt() {
        return this.insertAt;
    }




    //--- DATABASE MAPPING : update_by ( VARCHAR ) 
    public void setUpdateBy( String updateBy ) {
        this.updateBy = updateBy;
    }
    public String getUpdateBy() {
        return this.updateBy;
    }




    //--- DATABASE MAPPING : update_at ( DATETIME ) 
    public void setUpdateAt( Date updateAt ) {
        this.updateAt = updateAt;
    }
    public Date getUpdateAt() {
        return this.updateAt;
    }




    //--- DATABASE MAPPING : workspace ( INT ) 
    public void setWorkspace( Integer workspace ) {
        this.workspace = workspace;
    }
    public Integer getWorkspace() {
        return this.workspace;
    }





    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setContactCategory( ContactCategory contactCategory ) {
        this.contactCategory = contactCategory;
    }
    public ContactCategory getContactCategory() {
        return this.contactCategory;
    }

    public void setContactExtraFields3( ContactExtraFields contactExtraFields3 ) {
        this.contactExtraFields3 = contactExtraFields3;
    }
    public ContactExtraFields getContactExtraFields3() {
        return this.contactExtraFields3;
    }

    public void setListOfOrderTrans( List<OrderTrans> listOfOrderTrans ) {
        this.listOfOrderTrans = listOfOrderTrans;
    }
    public List<OrderTrans> getListOfOrderTrans() {
        return this.listOfOrderTrans;
    }

    public void setListOfChqbllPayrollDetail( List<ChqbllPayrollDetail> listOfChqbllPayrollDetail ) {
        this.listOfChqbllPayrollDetail = listOfChqbllPayrollDetail;
    }
    public List<ChqbllPayrollDetail> getListOfChqbllPayrollDetail() {
        return this.listOfChqbllPayrollDetail;
    }

    public void setListOfStockTransDetail( List<StockTransDetail> listOfStockTransDetail ) {
        this.listOfStockTransDetail = listOfStockTransDetail;
    }
    public List<StockTransDetail> getListOfStockTransDetail() {
        return this.listOfStockTransDetail;
    }

    public void setSaleSeller( SaleSeller saleSeller ) {
        this.saleSeller = saleSeller;
    }
    public SaleSeller getSaleSeller() {
        return this.saleSeller;
    }

    public void setListOfChqbllTrans( List<ChqbllTrans> listOfChqbllTrans ) {
        this.listOfChqbllTrans = listOfChqbllTrans;
    }
    public List<ChqbllTrans> getListOfChqbllTrans() {
        return this.listOfChqbllTrans;
    }

    public void setContactExtraFields6( ContactExtraFields contactExtraFields6 ) {
        this.contactExtraFields6 = contactExtraFields6;
    }
    public ContactExtraFields getContactExtraFields6() {
        return this.contactExtraFields6;
    }

    public void setListOfInvoiceTrans( List<InvoiceTrans> listOfInvoiceTrans ) {
        this.listOfInvoiceTrans = listOfInvoiceTrans;
    }
    public List<InvoiceTrans> getListOfInvoiceTrans() {
        return this.listOfInvoiceTrans;
    }

    public void setListOfInvoiceTransDetail( List<InvoiceTransDetail> listOfInvoiceTransDetail ) {
        this.listOfInvoiceTransDetail = listOfInvoiceTransDetail;
    }
    public List<InvoiceTransDetail> getListOfInvoiceTransDetail() {
        return this.listOfInvoiceTransDetail;
    }

    public void setContactExtraFields8( ContactExtraFields contactExtraFields8 ) {
        this.contactExtraFields8 = contactExtraFields8;
    }
    public ContactExtraFields getContactExtraFields8() {
        return this.contactExtraFields8;
    }

    public void setContactExtraFields10( ContactExtraFields contactExtraFields10 ) {
        this.contactExtraFields10 = contactExtraFields10;
    }
    public ContactExtraFields getContactExtraFields10() {
        return this.contactExtraFields10;
    }

    public void setListOfWaybillTransDetail( List<WaybillTransDetail> listOfWaybillTransDetail ) {
        this.listOfWaybillTransDetail = listOfWaybillTransDetail;
    }
    public List<WaybillTransDetail> getListOfWaybillTransDetail() {
        return this.listOfWaybillTransDetail;
    }

    public void setListOfStockTrans( List<StockTrans> listOfStockTrans ) {
        this.listOfStockTrans = listOfStockTrans;
    }
    public List<StockTrans> getListOfStockTrans() {
        return this.listOfStockTrans;
    }

    public void setListOfOrderTransDetail( List<OrderTransDetail> listOfOrderTransDetail ) {
        this.listOfOrderTransDetail = listOfOrderTransDetail;
    }
    public List<OrderTransDetail> getListOfOrderTransDetail() {
        return this.listOfOrderTransDetail;
    }

    public void setContactExtraFields2( ContactExtraFields contactExtraFields2 ) {
        this.contactExtraFields2 = contactExtraFields2;
    }
    public ContactExtraFields getContactExtraFields2() {
        return this.contactExtraFields2;
    }

    public void setStockPriceList( StockPriceList stockPriceList ) {
        this.stockPriceList = stockPriceList;
    }
    public StockPriceList getStockPriceList() {
        return this.stockPriceList;
    }

    public void setContactExtraFields4( ContactExtraFields contactExtraFields4 ) {
        this.contactExtraFields4 = contactExtraFields4;
    }
    public ContactExtraFields getContactExtraFields4() {
        return this.contactExtraFields4;
    }

    public void setContactExtraFields5( ContactExtraFields contactExtraFields5 ) {
        this.contactExtraFields5 = contactExtraFields5;
    }
    public ContactExtraFields getContactExtraFields5() {
        return this.contactExtraFields5;
    }

    public void setContactExtraFields7( ContactExtraFields contactExtraFields7 ) {
        this.contactExtraFields7 = contactExtraFields7;
    }
    public ContactExtraFields getContactExtraFields7() {
        return this.contactExtraFields7;
    }

    public void setListOfContactTrans( List<ContactTrans> listOfContactTrans ) {
        this.listOfContactTrans = listOfContactTrans;
    }
    public List<ContactTrans> getListOfContactTrans() {
        return this.listOfContactTrans;
    }

    public void setListOfWaybillTrans( List<WaybillTrans> listOfWaybillTrans ) {
        this.listOfWaybillTrans = listOfWaybillTrans;
    }
    public List<WaybillTrans> getListOfWaybillTrans() {
        return this.listOfWaybillTrans;
    }

    public void setContactExtraFields9( ContactExtraFields contactExtraFields9 ) {
        this.contactExtraFields9 = contactExtraFields9;
    }
    public ContactExtraFields getContactExtraFields9() {
        return this.contactExtraFields9;
    }

    public void setListOfChqbllPayroll( List<ChqbllPayroll> listOfChqbllPayroll ) {
        this.listOfChqbllPayroll = listOfChqbllPayroll;
    }
    public List<ChqbllPayroll> getListOfChqbllPayroll() {
        return this.listOfChqbllPayroll;
    }

    public void setContactExtraFields( ContactExtraFields contactExtraFields ) {
        this.contactExtraFields = contactExtraFields;
    }
    public ContactExtraFields getContactExtraFields() {
        return this.contactExtraFields;
    }

    public void setListOfChqbllDetailHistory( List<ChqbllDetailHistory> listOfChqbllDetailHistory ) {
        this.listOfChqbllDetailHistory = listOfChqbllDetailHistory;
    }
    public List<ChqbllDetailHistory> getListOfChqbllDetailHistory() {
        return this.listOfChqbllDetailHistory;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(code);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(taxOffice);
        sb.append("|");
        sb.append(taxNumber);
        sb.append("|");
        sb.append(tcKimlik);
        sb.append("|");
        sb.append(relevant);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(fax);
        sb.append("|");
        sb.append(mobilePhone);
        sb.append("|");
        sb.append(address1);
        sb.append("|");
        sb.append(address2);
        sb.append("|");
        sb.append(city);
        sb.append("|");
        sb.append(country);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(website);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(excCode);
        // attribute 'note' not usable (type = String Long Text)
        sb.append("|");
        sb.append(isActive);
        sb.append("|");
        sb.append(insertBy);
        sb.append("|");
        sb.append(insertAt);
        sb.append("|");
        sb.append(updateBy);
        sb.append("|");
        sb.append(updateAt);
        sb.append("|");
        sb.append(workspace);
        sb.append("|");
        sb.append(version);
        return sb.toString(); 
    } 

}
