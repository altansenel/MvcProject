/*
 * Created on 7 Mar 2016 ( Time 11:04:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

import org.hibernate.envers.Audited;

/**
 * Persistent class for entity stored in table "chqbll_detail_partial"
 *
 * @author Telosys Tools Generator
 *
 */




@Audited
@Entity
// Define named queries here
@Table(name = "chqbll_detail_partial")
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class ChqbllDetailPartial extends BaseEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
//	@EmbeddedId
//   private ChqbllDetailPartialKey compositePrimaryKey ;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="sort", nullable=false, length=6)
    private String     sort         ;    @Column(name="is_customer")
    private Boolean    isCustomer   ;    @Temporal(TemporalType.DATE)
    @Column(name="trans_date", nullable=false)
    private Date       transDate    ;    @Column(name="amount", nullable=false)
    private Double     amount       ;    @Column(name="exc_code", length=3)
    private String     excCode      ;    @Column(name="exc_rate")
    private Double     excRate      ;    @Column(name="exc_equivalent")
    private Double     excEquivalent ;    @Column(name="description", length=100)
    private String     description  ;    @Column(name="insert_by", length=20)
    private String     insertBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="insert_at")
    private Date       insertAt     ;
	// "detailId" (column "detail_id") is not defined by itself because used as FK in a link 
	// "safeId" (column "safe_id") is not defined by itself because used as FK in a link 
	// "transId" (column "trans_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="safe_id", referencedColumnName="id")
    private Safe safe        ;

    @ManyToOne
    @JoinColumn(name="trans_id", referencedColumnName="id")
    private SafeTrans safeTrans   ;

    @ManyToOne
    @JoinColumn(name="detail_id", referencedColumnName="id")
    private ChqbllPayrollDetail chqbllPayrollDetail;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------



    //--- DATABASE MAPPING : sort ( VARCHAR ) 
    public void setSort( String sort ) {
        this.sort = sort;
    }
    public String getSort() {
        return this.sort;
    }




    //--- DATABASE MAPPING : is_customer ( BIT ) 
    public void setIsCustomer( Boolean isCustomer ) {
        this.isCustomer = isCustomer;
    }
    public Boolean getIsCustomer() {
        return this.isCustomer;
    }




    //--- DATABASE MAPPING : trans_date ( DATE ) 
    public void setTransDate( Date transDate ) {
        this.transDate = transDate;
    }
    public Date getTransDate() {
        return this.transDate;
    }




    //--- DATABASE MAPPING : amount ( DOUBLE ) 
    public void setAmount( Double amount ) {
        this.amount = amount;
    }
    public Double getAmount() {
        return this.amount;
    }




    //--- DATABASE MAPPING : exc_code ( VARCHAR ) 
    public void setExcCode( String excCode ) {
        this.excCode = excCode;
    }
    public String getExcCode() {
        return this.excCode;
    }




    //--- DATABASE MAPPING : exc_rate ( DOUBLE ) 
    public void setExcRate( Double excRate ) {
        this.excRate = excRate;
    }
    public Double getExcRate() {
        return this.excRate;
    }




    //--- DATABASE MAPPING : exc_equivalent ( DOUBLE ) 
    public void setExcEquivalent( Double excEquivalent ) {
        this.excEquivalent = excEquivalent;
    }
    public Double getExcEquivalent() {
        return this.excEquivalent;
    }




    //--- DATABASE MAPPING : description ( VARCHAR ) 
    public void setDescription( String description ) {
        this.description = description;
    }
    public String getDescription() {
        return this.description;
    }




    //--- DATABASE MAPPING : insert_by ( VARCHAR ) 
    public void setInsertBy( String insertBy ) {
        this.insertBy = insertBy;
    }
    public String getInsertBy() {
        return this.insertBy;
    }




    //--- DATABASE MAPPING : insert_at ( DATETIME ) 
    public void setInsertAt( Date insertAt ) {
        this.insertAt = insertAt;
    }
    public Date getInsertAt() {
        return this.insertAt;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setSafe( Safe safe ) {
        this.safe = safe;
    }
    public Safe getSafe() {
        return this.safe;
    }

    public void setSafeTrans( SafeTrans safeTrans ) {
        this.safeTrans = safeTrans;
    }
    public SafeTrans getSafeTrans() {
        return this.safeTrans;
    }

    public void setChqbllPayrollDetail( ChqbllPayrollDetail chqbllPayrollDetail ) {
        this.chqbllPayrollDetail = chqbllPayrollDetail;
    }
    public ChqbllPayrollDetail getChqbllPayrollDetail() {
        return this.chqbllPayrollDetail;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(sort);
        sb.append("|");
        sb.append(isCustomer);
        sb.append("|");
        sb.append(transDate);
        sb.append("|");
        sb.append(amount);
        sb.append("|");
        sb.append(excCode);
        sb.append("|");
        sb.append(excRate);
        sb.append("|");
        sb.append(excEquivalent);
        sb.append("|");
        sb.append(description);
        sb.append("|");
        sb.append(insertBy);
        sb.append("|");
        sb.append(insertAt);
        return sb.toString(); 
    } 

}
