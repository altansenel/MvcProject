/*
 * Created on 7 Mar 2016 ( Time 11:04:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

import org.hibernate.envers.Audited;

/**
 * Persistent class for entity stored in table "stock"
 *
 * @author Telosys Tools Generator
 *
 */




@Audited
@Entity
// Define named queries here
@Table(name = "stock")
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class Stock extends BaseEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
//	@EmbeddedId
//   private StockKey compositePrimaryKey ;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="code", nullable=false, length=30)
    private String     code         ;    @Column(name="name", nullable=false, length=100)
    private String     name         ;    @Column(name="exc_code", length=3)
    private String     excCode      ;    @Column(name="provider_code", length=30)
    private String     providerCode ;    @Column(name="unit1", length=6)
    private String     unit1        ;    @Column(name="unit2", length=6)
    private String     unit2        ;    @Column(name="unit3", length=6)
    private String     unit3        ;    @Column(name="unit2ratio")
    private Double     unit2ratio   ;    @Column(name="unit3ratio")
    private Double     unit3ratio   ;    @Column(name="buy_price")
    private Double     buyPrice     ;    @Column(name="sell_price")
    private Double     sellPrice    ;    @Column(name="buy_tax")
    private Double     buyTax       ;    @Column(name="sell_tax")
    private Double     sellTax      ;    @Column(name="tax_rate2")
    private Double     taxRate2     ;    @Column(name="tax_rate3")
    private Double     taxRate3     ;    @Column(name="prim_rate")
    private Double     primRate     ;    @Column(name="max_limit")
    private Double     maxLimit     ;    @Column(name="min_limit")
    private Double     minLimit     ;    @Column(name="note")
    private String     note         ;    @Column(name="insert_by", length=20)
    private String     insertBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="insert_at")
    private Date       insertAt     ;    @Column(name="update_by", length=20)
    private String     updateBy     ;    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_at")
    private Date       updateAt     ;    @Column(name="is_active")
    private Boolean    isActive     ;    @Column(name="workspace", nullable=false)
    private Integer    workspace    ;
	// "categoryId" (column "category_id") is not defined by itself because used as FK in a link 
	// "extraField0Id" (column "extra_field0_id") is not defined by itself because used as FK in a link 
	// "extraField1Id" (column "extra_field1_id") is not defined by itself because used as FK in a link 
	// "extraField2Id" (column "extra_field2_id") is not defined by itself because used as FK in a link 
	// "extraField3Id" (column "extra_field3_id") is not defined by itself because used as FK in a link 
	// "extraField4Id" (column "extra_field4_id") is not defined by itself because used as FK in a link 
	// "extraField5Id" (column "extra_field5_id") is not defined by itself because used as FK in a link 
	// "extraField6Id" (column "extra_field6_id") is not defined by itself because used as FK in a link 
	// "extraField7Id" (column "extra_field7_id") is not defined by itself because used as FK in a link 
	// "extraField8Id" (column "extra_field8_id") is not defined by itself because used as FK in a link 
	// "extraField9Id" (column "extra_field9_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="category_id", referencedColumnName="id")
    private StockCategory stockCategory;

    @OneToMany(mappedBy="stock", targetEntity=StockCostingInventory.class)
    private List<StockCostingInventory> listOfStockCostingInventory;

    @ManyToOne
    @JoinColumn(name="extra_field1_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields4;

    @OneToMany(mappedBy="stock", targetEntity=InvoiceTransDetail.class)
    private List<InvoiceTransDetail> listOfInvoiceTransDetail;

    @OneToMany(mappedBy="stock", targetEntity=StockCosting.class)
    private List<StockCosting> listOfStockCosting;

    @ManyToOne
    @JoinColumn(name="extra_field3_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields6;

    @ManyToOne
    @JoinColumn(name="extra_field9_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields2;

    @OneToMany(mappedBy="stock", targetEntity=WaybillTransDetail.class)
    private List<WaybillTransDetail> listOfWaybillTransDetail;

    @ManyToOne
    @JoinColumn(name="extra_field5_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields8;

    @OneToMany(mappedBy="stock", targetEntity=OrderTransDetail.class)
    private List<OrderTransDetail> listOfOrderTransDetail;

    @ManyToOne
    @JoinColumn(name="extra_field7_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields10;

    @ManyToOne
    @JoinColumn(name="extra_field0_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields3;

    @ManyToOne
    @JoinColumn(name="extra_field2_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields5;

    @ManyToOne
    @JoinColumn(name="extra_field8_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields;

    @OneToMany(mappedBy="stock", targetEntity=StockCostingDetail.class)
    private List<StockCostingDetail> listOfStockCostingDetail;

    @ManyToOne
    @JoinColumn(name="extra_field4_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields7;

    @OneToMany(mappedBy="stock", targetEntity=StockBarcode.class)
    private List<StockBarcode> listOfStockBarcode;

    @ManyToOne
    @JoinColumn(name="extra_field6_id", referencedColumnName="id")
    private StockExtraFields stockExtraFields9;

    @OneToMany(mappedBy="stock", targetEntity=StockTransDetail.class)
    private List<StockTransDetail> listOfStockTransDetail;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------



    //--- DATABASE MAPPING : code ( VARCHAR ) 
    public void setCode( String code ) {
        this.code = code;
    }
    public String getCode() {
        return this.code;
    }




    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }




    //--- DATABASE MAPPING : exc_code ( VARCHAR ) 
    public void setExcCode( String excCode ) {
        this.excCode = excCode;
    }
    public String getExcCode() {
        return this.excCode;
    }




    //--- DATABASE MAPPING : provider_code ( VARCHAR ) 
    public void setProviderCode( String providerCode ) {
        this.providerCode = providerCode;
    }
    public String getProviderCode() {
        return this.providerCode;
    }




    //--- DATABASE MAPPING : unit1 ( VARCHAR ) 
    public void setUnit1( String unit1 ) {
        this.unit1 = unit1;
    }
    public String getUnit1() {
        return this.unit1;
    }




    //--- DATABASE MAPPING : unit2 ( VARCHAR ) 
    public void setUnit2( String unit2 ) {
        this.unit2 = unit2;
    }
    public String getUnit2() {
        return this.unit2;
    }




    //--- DATABASE MAPPING : unit3 ( VARCHAR ) 
    public void setUnit3( String unit3 ) {
        this.unit3 = unit3;
    }
    public String getUnit3() {
        return this.unit3;
    }




    //--- DATABASE MAPPING : unit2ratio ( DOUBLE ) 
    public void setUnit2ratio( Double unit2ratio ) {
        this.unit2ratio = unit2ratio;
    }
    public Double getUnit2ratio() {
        return this.unit2ratio;
    }




    //--- DATABASE MAPPING : unit3ratio ( DOUBLE ) 
    public void setUnit3ratio( Double unit3ratio ) {
        this.unit3ratio = unit3ratio;
    }
    public Double getUnit3ratio() {
        return this.unit3ratio;
    }




    //--- DATABASE MAPPING : buy_price ( DOUBLE ) 
    public void setBuyPrice( Double buyPrice ) {
        this.buyPrice = buyPrice;
    }
    public Double getBuyPrice() {
        return this.buyPrice;
    }




    //--- DATABASE MAPPING : sell_price ( DOUBLE ) 
    public void setSellPrice( Double sellPrice ) {
        this.sellPrice = sellPrice;
    }
    public Double getSellPrice() {
        return this.sellPrice;
    }




    //--- DATABASE MAPPING : buy_tax ( DOUBLE ) 
    public void setBuyTax( Double buyTax ) {
        this.buyTax = buyTax;
    }
    public Double getBuyTax() {
        return this.buyTax;
    }




    //--- DATABASE MAPPING : sell_tax ( DOUBLE ) 
    public void setSellTax( Double sellTax ) {
        this.sellTax = sellTax;
    }
    public Double getSellTax() {
        return this.sellTax;
    }




    //--- DATABASE MAPPING : tax_rate2 ( DOUBLE ) 
    public void setTaxRate2( Double taxRate2 ) {
        this.taxRate2 = taxRate2;
    }
    public Double getTaxRate2() {
        return this.taxRate2;
    }




    //--- DATABASE MAPPING : tax_rate3 ( DOUBLE ) 
    public void setTaxRate3( Double taxRate3 ) {
        this.taxRate3 = taxRate3;
    }
    public Double getTaxRate3() {
        return this.taxRate3;
    }




    //--- DATABASE MAPPING : prim_rate ( DOUBLE ) 
    public void setPrimRate( Double primRate ) {
        this.primRate = primRate;
    }
    public Double getPrimRate() {
        return this.primRate;
    }




    //--- DATABASE MAPPING : max_limit ( DOUBLE ) 
    public void setMaxLimit( Double maxLimit ) {
        this.maxLimit = maxLimit;
    }
    public Double getMaxLimit() {
        return this.maxLimit;
    }




    //--- DATABASE MAPPING : min_limit ( DOUBLE ) 
    public void setMinLimit( Double minLimit ) {
        this.minLimit = minLimit;
    }
    public Double getMinLimit() {
        return this.minLimit;
    }




    //--- DATABASE MAPPING : note ( TEXT ) 
    public void setNote( String note ) {
        this.note = note;
    }
    public String getNote() {
        return this.note;
    }




    //--- DATABASE MAPPING : insert_by ( VARCHAR ) 
    public void setInsertBy( String insertBy ) {
        this.insertBy = insertBy;
    }
    public String getInsertBy() {
        return this.insertBy;
    }




    //--- DATABASE MAPPING : insert_at ( DATETIME ) 
    public void setInsertAt( Date insertAt ) {
        this.insertAt = insertAt;
    }
    public Date getInsertAt() {
        return this.insertAt;
    }




    //--- DATABASE MAPPING : update_by ( VARCHAR ) 
    public void setUpdateBy( String updateBy ) {
        this.updateBy = updateBy;
    }
    public String getUpdateBy() {
        return this.updateBy;
    }




    //--- DATABASE MAPPING : update_at ( DATETIME ) 
    public void setUpdateAt( Date updateAt ) {
        this.updateAt = updateAt;
    }
    public Date getUpdateAt() {
        return this.updateAt;
    }




    //--- DATABASE MAPPING : is_active ( BIT ) 
    public void setIsActive( Boolean isActive ) {
        this.isActive = isActive;
    }
    public Boolean getIsActive() {
        return this.isActive;
    }




    //--- DATABASE MAPPING : workspace ( INT ) 
    public void setWorkspace( Integer workspace ) {
        this.workspace = workspace;
    }
    public Integer getWorkspace() {
        return this.workspace;
    }





    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setStockCategory( StockCategory stockCategory ) {
        this.stockCategory = stockCategory;
    }
    public StockCategory getStockCategory() {
        return this.stockCategory;
    }

    public void setListOfStockCostingInventory( List<StockCostingInventory> listOfStockCostingInventory ) {
        this.listOfStockCostingInventory = listOfStockCostingInventory;
    }
    public List<StockCostingInventory> getListOfStockCostingInventory() {
        return this.listOfStockCostingInventory;
    }

    public void setStockExtraFields4( StockExtraFields stockExtraFields4 ) {
        this.stockExtraFields4 = stockExtraFields4;
    }
    public StockExtraFields getStockExtraFields4() {
        return this.stockExtraFields4;
    }

    public void setListOfInvoiceTransDetail( List<InvoiceTransDetail> listOfInvoiceTransDetail ) {
        this.listOfInvoiceTransDetail = listOfInvoiceTransDetail;
    }
    public List<InvoiceTransDetail> getListOfInvoiceTransDetail() {
        return this.listOfInvoiceTransDetail;
    }

    public void setListOfStockCosting( List<StockCosting> listOfStockCosting ) {
        this.listOfStockCosting = listOfStockCosting;
    }
    public List<StockCosting> getListOfStockCosting() {
        return this.listOfStockCosting;
    }

    public void setStockExtraFields6( StockExtraFields stockExtraFields6 ) {
        this.stockExtraFields6 = stockExtraFields6;
    }
    public StockExtraFields getStockExtraFields6() {
        return this.stockExtraFields6;
    }

    public void setStockExtraFields2( StockExtraFields stockExtraFields2 ) {
        this.stockExtraFields2 = stockExtraFields2;
    }
    public StockExtraFields getStockExtraFields2() {
        return this.stockExtraFields2;
    }

    public void setListOfWaybillTransDetail( List<WaybillTransDetail> listOfWaybillTransDetail ) {
        this.listOfWaybillTransDetail = listOfWaybillTransDetail;
    }
    public List<WaybillTransDetail> getListOfWaybillTransDetail() {
        return this.listOfWaybillTransDetail;
    }

    public void setStockExtraFields8( StockExtraFields stockExtraFields8 ) {
        this.stockExtraFields8 = stockExtraFields8;
    }
    public StockExtraFields getStockExtraFields8() {
        return this.stockExtraFields8;
    }

    public void setListOfOrderTransDetail( List<OrderTransDetail> listOfOrderTransDetail ) {
        this.listOfOrderTransDetail = listOfOrderTransDetail;
    }
    public List<OrderTransDetail> getListOfOrderTransDetail() {
        return this.listOfOrderTransDetail;
    }

    public void setStockExtraFields10( StockExtraFields stockExtraFields10 ) {
        this.stockExtraFields10 = stockExtraFields10;
    }
    public StockExtraFields getStockExtraFields10() {
        return this.stockExtraFields10;
    }

    public void setStockExtraFields3( StockExtraFields stockExtraFields3 ) {
        this.stockExtraFields3 = stockExtraFields3;
    }
    public StockExtraFields getStockExtraFields3() {
        return this.stockExtraFields3;
    }

    public void setStockExtraFields5( StockExtraFields stockExtraFields5 ) {
        this.stockExtraFields5 = stockExtraFields5;
    }
    public StockExtraFields getStockExtraFields5() {
        return this.stockExtraFields5;
    }

    public void setStockExtraFields( StockExtraFields stockExtraFields ) {
        this.stockExtraFields = stockExtraFields;
    }
    public StockExtraFields getStockExtraFields() {
        return this.stockExtraFields;
    }

    public void setListOfStockCostingDetail( List<StockCostingDetail> listOfStockCostingDetail ) {
        this.listOfStockCostingDetail = listOfStockCostingDetail;
    }
    public List<StockCostingDetail> getListOfStockCostingDetail() {
        return this.listOfStockCostingDetail;
    }

    public void setStockExtraFields7( StockExtraFields stockExtraFields7 ) {
        this.stockExtraFields7 = stockExtraFields7;
    }
    public StockExtraFields getStockExtraFields7() {
        return this.stockExtraFields7;
    }

    public void setListOfStockBarcode( List<StockBarcode> listOfStockBarcode ) {
        this.listOfStockBarcode = listOfStockBarcode;
    }
    public List<StockBarcode> getListOfStockBarcode() {
        return this.listOfStockBarcode;
    }

    public void setStockExtraFields9( StockExtraFields stockExtraFields9 ) {
        this.stockExtraFields9 = stockExtraFields9;
    }
    public StockExtraFields getStockExtraFields9() {
        return this.stockExtraFields9;
    }

    public void setListOfStockTransDetail( List<StockTransDetail> listOfStockTransDetail ) {
        this.listOfStockTransDetail = listOfStockTransDetail;
    }
    public List<StockTransDetail> getListOfStockTransDetail() {
        return this.listOfStockTransDetail;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(code);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(excCode);
        sb.append("|");
        sb.append(providerCode);
        sb.append("|");
        sb.append(unit1);
        sb.append("|");
        sb.append(unit2);
        sb.append("|");
        sb.append(unit3);
        sb.append("|");
        sb.append(unit2ratio);
        sb.append("|");
        sb.append(unit3ratio);
        sb.append("|");
        sb.append(buyPrice);
        sb.append("|");
        sb.append(sellPrice);
        sb.append("|");
        sb.append(buyTax);
        sb.append("|");
        sb.append(sellTax);
        sb.append("|");
        sb.append(taxRate2);
        sb.append("|");
        sb.append(taxRate3);
        sb.append("|");
        sb.append(primRate);
        sb.append("|");
        sb.append(maxLimit);
        sb.append("|");
        sb.append(minLimit);
        // attribute 'note' not usable (type = String Long Text)
        sb.append("|");
        sb.append(insertBy);
        sb.append("|");
        sb.append(insertAt);
        sb.append("|");
        sb.append(updateBy);
        sb.append("|");
        sb.append(updateAt);
        sb.append("|");
        sb.append(isActive);
        sb.append("|");
        sb.append(workspace);
        sb.append("|");
        sb.append(version);
        return sb.toString(); 
    } 

}
